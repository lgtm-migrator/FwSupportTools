#!/bin/bash

# provision-packaging-machine

set -e -o pipefail

# Set up

RELEASE=$(lsb_release -sc)
# Use codename of wasta Linux's Ubuntu base
if [ -f /etc/wasta-release ]; then
  source /etc/wasta-release
  RELEASE=$CODENAME
fi

# Remove existing SIL repositories
sudo perl -ni -e 'print unless /sil\.org/' /etc/apt/sources.list

wget -qO - http://packages.sil.org/sil.gpg | sudo apt-key add -
wget -qO - http://linux.lsdev.sil.org/downloads/sil-testing.gpg | sudo apt-key add -
sudo add-apt-repository "deb http://packages.sil.org/ubuntu $RELEASE main"
sudo add-apt-repository "deb http://packages.sil.org/ubuntu $RELEASE-experimental main"
sudo add-apt-repository "deb http://linux.lsdev.sil.org/ubuntu $RELEASE main"
sudo add-apt-repository "deb http://linux.lsdev.sil.org/ubuntu $RELEASE-proposed main"
sudo add-apt-repository "deb http://linux.lsdev.sil.org/ubuntu $RELEASE-experimental main"

sudo apt-get update
if ! sudo DEBIAN_FRONTEND=noninteractive apt-get -y upgrade; then
  echo provisioner: There were errors while updating system packages. Ignoring.
fi
sudo apt-get -y install wget curl vim meld ack-grep dconf-tools mercurial debhelper dh-autoreconf git-cola geany quilt git-buildpackage

# pbuilder
sudo apt-get -y install pbuilder
sudo apt-get -y install git

# Fix ssh usedns error
sudo perl -ni -e 'print unless /UseDNS/' ssh_config

cat > ~/.hgrc <<EOF
[extensions]
purge =
EOF

cat > ~/.dput.cf <<EOF
[pso]
method = rsync
fqdn = packager.lsdev.sil.org
login = upload
incoming = %(pso)s
EOF

cd ~
if [ ! -d FwSupportTools ]; then
  git clone https://github.com/sillsdev/FwSupportTools
else
  cd FwSupportTools && git pull --rebase && cd -
fi
ln -sf ~/FwSupportTools/packaging/pbuilder
ln -sf ~/FwSupportTools/packaging/pbuilder/pbuilderrc .pbuilderrc

cd ~/pbuilder
wget http://linux.lsdev.sil.org/downloads/sil-testing.gpg
# Using a smaller set of platforms to be able to package for to begin with.
DISTRIBUTIONS="precise trusty xenial" ./setup.sh

echo provisioner: Done.

# You can then build a package managed by build-packages by running a command such as:
# cd; ~/FwSupportTools/packaging/build-packages --main-package-name flexbridge --dists "trusty" --arches "amd64"  --repository-committishes flexbridge=origin/master  |&tee /tmp/log
# Or you can build a source and binary package by running commands such as:
# cd someproject && debuild -uc -us -S -nc
# cd someproject/.. && sudo DISTRIBUTIONS=trusty ARCHES=amd64 ~/pbuilder/build-multi.sh source-package-name.dsc |&tee /tmp/log
